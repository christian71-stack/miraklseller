<?php
/**
 * PC01Response200FeaturesTest
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  cbdesk\Mirakl
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Mirakl Marketplace APIs
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest-release
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.17.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace cbdesk\Mirakl\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * PC01Response200FeaturesTest Class Doc Comment
 *
 * @category    Class
 * @description PC01Response200Features
 * @package     cbdesk\Mirakl
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class PC01Response200FeaturesTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PC01Response200Features"
     */
    public function testPC01Response200Features()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "catalog"
     */
    public function testPropertyCatalog()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "circular_economy_data_collection"
     */
    public function testPropertyCircularEconomyDataCollection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "competitive_pricing_tool"
     */
    public function testPropertyCompetitivePricingTool()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "direct_payment_customer_store"
     */
    public function testPropertyDirectPaymentCustomerStore()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_seller_alternative_carrier"
     */
    public function testPropertyDisableSellerAlternativeCarrier()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "kyc_status_per_seller"
     */
    public function testPropertyKycStatusPerSeller()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lead_time_to_ship_by_sellers_enabled"
     */
    public function testPropertyLeadTimeToShipBySellersEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "multi_currency"
     */
    public function testPropertyMultiCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "multi_payout_psp_per_seller"
     */
    public function testPropertyMultiPayoutPspPerSeller()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "no_reply_needed"
     */
    public function testPropertyNoReplyNeeded()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "offer_prices_decimals"
     */
    public function testPropertyOfferPricesDecimals()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "operator_csv_delimiter"
     */
    public function testPropertyOperatorCsvDelimiter()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_conditions"
     */
    public function testPropertyOrderConditions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_tax_mode"
     */
    public function testPropertyOrderTaxMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_workflows"
     */
    public function testPropertyOrderWorkflows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_confirmation"
     */
    public function testPropertyPaymentConfirmation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pricing"
     */
    public function testPropertyPricing()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_data_validation_by_channel"
     */
    public function testPropertyProductDataValidationByChannel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipment"
     */
    public function testPropertyShipment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shop_tax_options"
     */
    public function testPropertyShopTaxOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_collection"
     */
    public function testPropertyTaxCollection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_id_number"
     */
    public function testPropertyTaxIdNumber()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
